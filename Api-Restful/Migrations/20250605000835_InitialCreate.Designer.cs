// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api_Restful.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250605000835_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cargo", b =>
                {
                    b.Property<int>("ID_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID_PK"));

                    b.Property<string>("Abreviacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID_PK");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("Tarefa", b =>
                {
                    b.Property<int>("ID_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID_PK"));

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Data_Conclusao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Prioridade")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID_PK");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("Token", b =>
                {
                    b.Property<int>("ID_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID_PK"));

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ID_Usuario")
                        .HasColumnType("integer");

                    b.HasKey("ID_PK");

                    b.HasIndex("ID_Usuario");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("ID_PK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID_PK"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ID_Cargo")
                        .HasColumnType("integer");

                    b.Property<int?>("ID_Tokens")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID_PK");

                    b.HasIndex("ID_Cargo");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("UsuarioTarefa", b =>
                {
                    b.Property<int>("ID_Usuario")
                        .HasColumnType("integer");

                    b.Property<int>("ID_Tarefa")
                        .HasColumnType("integer");

                    b.HasKey("ID_Usuario", "ID_Tarefa");

                    b.HasIndex("ID_Tarefa");

                    b.ToTable("UsuarioTarefas");
                });

            modelBuilder.Entity("Token", b =>
                {
                    b.HasOne("Usuario", "Usuario")
                        .WithMany("Tokens")
                        .HasForeignKey("ID_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.HasOne("Cargo", "Cargo")
                        .WithMany("Usuarios")
                        .HasForeignKey("ID_Cargo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("UsuarioTarefa", b =>
                {
                    b.HasOne("Tarefa", "Tarefa")
                        .WithMany("UsuarioTarefas")
                        .HasForeignKey("ID_Tarefa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Usuario", "Usuario")
                        .WithMany("UsuarioTarefas")
                        .HasForeignKey("ID_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Cargo", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Tarefa", b =>
                {
                    b.Navigation("UsuarioTarefas");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Navigation("Tokens");

                    b.Navigation("UsuarioTarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
