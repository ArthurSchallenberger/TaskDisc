// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace TaskDisc.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api_Restful.Core.Entities.JobTitlesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("Api_Restful.Core.Entities.TaskEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Completion_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Api_Restful.Core.Entities.TaskUserEntity", b =>
                {
                    b.Property<int>("Id_User")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Task")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id_User", "Id_Task");

                    b.HasIndex("Id_Task");

                    b.ToTable("TaskUsers");
                });

            modelBuilder.Entity("Api_Restful.Core.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("ID_JobTitle")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ID_JobTitle");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TokenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Expiration_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ID_User")
                        .HasColumnType("integer");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastUsed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ID_User");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("Api_Restful.Core.Entities.TaskUserEntity", b =>
                {
                    b.HasOne("Api_Restful.Core.Entities.TaskEntity", "Task")
                        .WithMany("TaskUsers")
                        .HasForeignKey("Id_Task")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_Restful.Core.Entities.UserEntity", "User")
                        .WithMany("TaskUsers")
                        .HasForeignKey("Id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Api_Restful.Core.Entities.UserEntity", b =>
                {
                    b.HasOne("Api_Restful.Core.Entities.JobTitlesEntity", "JobTitle")
                        .WithMany("User")
                        .HasForeignKey("ID_JobTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobTitle");
                });

            modelBuilder.Entity("TokenEntity", b =>
                {
                    b.HasOne("Api_Restful.Core.Entities.UserEntity", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Api_Restful.Core.Entities.JobTitlesEntity", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Api_Restful.Core.Entities.TaskEntity", b =>
                {
                    b.Navigation("TaskUsers");
                });

            modelBuilder.Entity("Api_Restful.Core.Entities.UserEntity", b =>
                {
                    b.Navigation("TaskUsers");

                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
